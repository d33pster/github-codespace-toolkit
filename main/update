#!/usr/bin/env python3

from os import system as run
from os.path import basename
from sys import argv as args, exit as escape
from colorama import init as colorama_init, Fore
import subprocess
from re import search

def logo():
    # get version
    with open("gct-version", "r") as vers:
        version = vers.read().replace('\n', '')
    # print logo
    print("      ", Fore.BLUE, "GitHub CodeSpace Toolkit", Fore.RESET)
    print("      ", Fore.BLUE, f"version {version}", Fore.RESET)
    print("      ", Fore.BLACK, ":made by d33pster:", Fore.RESET)

def showhelp():
    logo()
    print('help')
    print(Fore.RED, "-h | --help", Fore.RESET, " : Display this help module.")
    print(Fore.RED, "-m | --message", Fore.RESET, " : Set commit message (accepts String) (default - update)")
    print(Fore.RED, "-f | --files", Fore.RESET, " : list for files")

def main():
    global checkLogoFlag
    # get args list
    arglist = args[1:]

    # set default variables
    commit_message = "update"
    filenames = ['*']

    # parse the args and print error if any unknown option
    arguments = []
    for i in range(len(arglist)):
        if arglist[i-1] == "-f" or arglist[i-1]=="--files":
            break
        if search("-/*", arglist[i]):
            arguments.append(arglist[i])
    for arg in arguments:
        if arg not in ['-h','--help','-m','--message','-n','--no-logo','-f','--files']:
            error = f"option {arg} not recognised"
            print(Fore.RED, "ERROR", Fore.RESET, f" : {error}")
            escape()

    # option catcher
    for arg in arglist:
        if arg in ['-h', '--help']:
            showhelp()
            escape()
        elif arg in ['-n', '--no-logo']:
            checkLogoFlag = False
        elif arg in ['-m', '--message']:
            for i in range(len(args)):
                if args[i] == "-m" or args[i] == "--message":
                    commit_message = args[i+1]
        elif arg in ['-f', '--files']:
            filenames = []
            for i in range(len(args)):
                if args[i]=="-f" or args[i]=="--files":
                    for j in range(i+1, len(args)):
                        filenames.append(args[j])

    # show logo
    if(checkLogoFlag):
        logo()
    
    # run commands
    ## add
    for file in filenames:
        # run(f"git add {file}")
        if file == "*":
            print(Fore.RED, "INFO", Fore.RESET, f" : Adding all files")
        else:
            print(Fore.RED, "INFO", Fore.RESET, f" : filename -> {basename(file)}")
        dump = subprocess.Popen(['git', 'add', f'{file}'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL).wait()
    print(Fore.RED, "INFO", Fore.RESET, f" : Added.")

    ## commit
    run(f"git commit -m \"{commit_message}\"")
    print(Fore.RED, "INFO", Fore.RESET, f" : Commit Success.")

    ## push
    # run("git push &> /dev/null")
    dump = subprocess.Popen(['git','push'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL).wait()
    print(Fore.RED, "INFO", Fore.RESET, f" : done.")

    # acknowledge
    print("      ", Fore.BLUE, "GitHub CodeSpace Toolkit", Fore.RESET)
    print("      ", Fore.BLACK, "         END", Fore.RESET)

if __name__=="__main__":
    checkLogoFlag = True
    colorama_init()
    main()