#!/usr/bin/python

from sys import argv as args
from os import chdir, getcwd as pwd, system as run
from os.path import join as joinPath, exists as there, dirname
from shutil import rmtree
import subprocess
from datetime import datetime

def logger(target: str, entry: str):
    currentDateTime = datetime.now()
    with open(joinPath(target, ".log"), "a") as logfile:
        logfile.write(f"\nEntry: {currentDateTime.date()}, {currentDateTime.hour}:{currentDateTime.minute}:{currentDateTime.second}\n")
        logfile.write(entry)

def loggerEND(target: str):
    with open(joinPath(target, ".log"), "a") as logfile:
        logfile.write("\nENTRY END\n")

def main():
    currentDirectory = pwd()
    # already present directory
    if there(joinPath(currentDirectory, "custombash")):
        rmtree(joinPath(currentDirectory, "custombash"))
    # clone
    target = dirname(dirname(currentDirectory))
    logger(target=target, entry="GIT CLONE COMMAND - repo: https://github.com/d33pster/custombash.git")
    with open(joinPath(target, ".log"), "a") as logfile:
        dump = subprocess.Popen(['git', 'clone', 'https://github.com/d33pster/custombash.git'], stdout=subprocess.DEVNULL, stderr=logfile).wait()
    # run("git clone https://github.com/d33pster/custombash.git 2> /dev/null")
    loggerEND(target=target)

    # get custombash directory and change to custombash directory
    cbDirectory = joinPath(currentDirectory, "custombash")
    chdir(cbDirectory)

    # run setup-gct (customised just for this project)
    subprocess.Popen([f"{joinPath(cbDirectory, 'setup-gct')}", f"{args[1]}"]).wait()

    # delete custombash directory
    # chdir(homeDirectory)
    # run("rm -rf custombash")
    
    # change back to the original directory
    chdir(currentDirectory)

if __name__ == "__main__":
    main()